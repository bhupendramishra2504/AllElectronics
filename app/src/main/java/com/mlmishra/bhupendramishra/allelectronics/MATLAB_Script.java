package com.mlmishra.bhupendramishra.allelectronics;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.InputType;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.Toast;
import android.widget.TextView;
import android.view.inputmethod.InputMethodManager;
import android.content.Context;
import android.app.Activity;

public class MATLAB_Script extends Activity {
    String separator = System.getProperty("line.separator");
    private Button button;
    private String filename,write_data;
    private EditText title,ippath,oppath;
    private TextView tv;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //getSupportActionBar().hide();
        setContentView(R.layout.activity_matlab__script);
        title=(EditText)findViewById(R.id.mnnet1);
        ippath=(EditText)findViewById(R.id.mnnet2);
        oppath=(EditText)findViewById(R.id.mnnet3);
        tv=(TextView)findViewById(R.id.mtv6);
        tv.setText(separator+"USAGE GUIDELINES : "+separator+"1. Make two data excel file one is for input data and other is for output data these data files will be used to train your neural network"+separator+"2. Define i/p o/p data columnwise in excel files(remember data must be in columnwise)"+separator+"3. Define the path of these two data file in the above fields"+separator+"4. Provide number of hidden layers you want in your network"+separator+"Generate MATLAB Script"+separator+separator+"for Viewing purpose file is named as .txt for executing it in MATLAB change the extension to .m or make a .m file in MATLAB and copy the contents of this file into it");
        button=(Button)findViewById(R.id.mbutton);
        button.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View arg0) {

                AlertDialog.Builder builder = new AlertDialog.Builder(MATLAB_Script.this);
                builder.setTitle("Enter Filename");

                final EditText input = new EditText(MATLAB_Script.this);


                input.setInputType(InputType.TYPE_CLASS_TEXT);
                builder.setView(input);


                builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        filename = input.getText().toString();
                        write_data = "%MATALAB SCRIPT Generated by Allelectronics"+separator+separator+"clc"+separator+separator+"sprintf('%s','"+title.getText().toString()+"')"+separator+separator+"model_mode=input('Enter the required option\n 1. Train the neural Network \n2. Predict o/p from trained Neural Network');"+separator+separator+"if(model_mode==1)"+separator+"training_input=xlsread('"+ippath.getText().toString()+"');"+separator+"training_output=xlsread('"+oppath.getText().toString()+"');"+separator+separator+hidden_layer()+separator+separator+mode2();

                        Global.write_file1(filename, write_data, MATLAB_Script.this);

                        Toast.makeText(MATLAB_Script.this, "MATLAB Script Generated and saved in your library, same can be found in storge media also", Toast.LENGTH_LONG).show();
                        InputMethodManager mgr = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                        mgr.hideSoftInputFromWindow(input.getWindowToken(), 0);

                    }
                });
                builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.cancel();
                        InputMethodManager mgr = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                        mgr.hideSoftInputFromWindow(input.getWindowToken(), 0);
                    }
                });

                builder.show();
            }

        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_matlab__script, menu);
        return true;
    }

    @Override
    public void onBackPressed() {

        Intent intent = new Intent(MATLAB_Script.this, Table_content.class);
        startActivity(intent);
        finish();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public String hidden_layer( )
    {
        String data="";
        boolean isnn,isnn1;
        isnn = ((RadioButton) findViewById(R.id.mnn1)).isChecked();
        isnn1 = ((RadioButton) findViewById(R.id.mnn2)).isChecked();
        if(isnn)
        {
            data=data+"num_neurons_h1=input('Enter the number of neurons in your neural network : ');"+separator+separator+"act_func_h1=input('Enter the Activation Function [purelin/logsig/tansig] :','s');"+separator+separator+"neural_network=newff(training_input,training_output,num_neurons_h1,{act_func_h1});";
        }
        else if(isnn1)
        {
            data=data+"num_neurons_h1=input('Enter the number of neurons in your neural network in first layer : ');"+separator+separator+"num_neurons_h2=input('Enter the number of neurons in your neural network in second layer : ');"+separator+separator+"act_func_h1=input('Enter the Activation Function [purelin/logsig/tansig] for layer 1:','s');"+separator+separator+"act_func_h2=input('Enter the Activation Function [purelin/logsig/tansig] for layer2 :','s');"+separator+separator+"neural_network=newff(training_input,training_output,{num_neurons_h1,num_neurons_h2},{act_func_h1,act_func_h2});";
        }
        data=data+separator+separator+"neural_network.trainParam.max_fail=6;"+separator+separator+"[neural_network,tr]=train(neural_network,training_input,training_output);"+separator+separator+"h2=plotperf(tr);"+separator+separator+"save_option=input('Do you want to save the network Y/N : ','s');"+separator+separator+"if(save_option=='y')"+separator+separator+"nname=input('Enter the Name of the Network : ','s');"+separator+separator+"ext1='.mat';"+separator+separator+"save_filename=strcat(nname,ext1);"+separator+separator+"save(save_file_name);"+separator+separator+"end"+separator+separator+"sprintf('s','Neural Network Saved Successfully');"+separator;

        return data;
    }

    public String mode2()
    {
        String data="";
        data=data+"else if(model_mode==2)"+separator+separator+"net_name=input('Enter the name of network you want to load : ','s');"+separator+separator+"ext='.mat';"+separator+separator+"load_filename=strcat(net_name,ext);"+separator+separator+"load(load_filename)"+separator+separator+"first_factor=input('Enter first input vector : ');"+separator+separator+"similarly define all the input vector described above"+separator+separator+"input_vector=[first_factor;second_factor;similarly define all input factors here];"+separator+separator+"result=sim(neural_network,input_vector);"+separator+separator+"result_str=strcat('result is :',num2str(result));"+separator+separator+"disp(result_str);"+separator+separator+"end";
        return data;
    }

}
